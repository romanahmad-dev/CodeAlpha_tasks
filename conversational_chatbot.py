# -*- coding: utf-8 -*-
"""Conversational Chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Be71wUIX7lZRk8umbxfO4AqPKdcPdE0z
"""

# NLTK spaCy
!pip install nltk spacy
!python -m spacy download en_core_web_sm

# NLTK
import nltk
nltk.download('punkt')
nltk.download('stopwords')

import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
import spacy

# Download necessary data for nltk
nltk.download('punkt')
nltk.download('stopwords')

# Load spaCy English model
nlp = spacy.load('en_core_web_sm')

# Preprocessing user input
def preprocess_text(text, method='nltk'):
    if method == 'nltk':
        tokens = word_tokenize(text.lower())
        stop_words = set(stopwords.words('english'))
        filtered_tokens = [word for word in tokens if word.isalnum() and word not in stop_words]
    elif method == 'spacy':
        doc = nlp(text.lower())
        filtered_tokens = [token.text for token in doc if not token.is_stop and not token.is_punct]
    return filtered_tokens

# Knowledge base of possible responses
def generate_response(user_input, method='nltk'):
    tokens = preprocess_text(user_input, method)

    # Respond to multiple intents
    if any(greet in tokens for greet in ["hello", "hi", "hey"]):
        return "Hello! How can I assist you today?"
    elif any(ask_name in tokens for ask_name in ["name", "who", "are", "you"]):
        return "I am your friendly chatbot, designed to help with basic queries! My name is Roman Ahmad Khan"
    elif any(ask_help in tokens for ask_help in ["help", "assist", "support"]):
        return "Sure, I can help you. What do you need assistance with?"
    elif any(farewell in tokens for farewell in ["bye", "goodbye", "exit"]):
        return "Goodbye! Have a great day!"
    elif any(time_question in tokens for time_question in ["time", "current", "what", "now"]):
        return "I can't tell time yet, but I can answer many other questions!"
    elif any(weather in tokens for weather in ["weather", "rain", "sun", "forecast"]):
        return "I can't predict the weather, but you can check a weather app!"
    elif any(feeling in tokens for feeling in ["how", "feeling", "doing", "today"]):
        return "I'm just a bot, but I'm doing great! How about you?"
    elif any(joke in tokens for joke in ["joke", "funny", "laugh"]):
        return "Why don't scientists trust atoms? Because they make up everything!"
    else:
        return "I'm sorry, I don't understand that. Can you ask something else?"

# Running the chatbot in a loop (Colab friendly)
def chatbot(method='nltk'):
    print("Hello! I am your chatbot. Type 'bye' to exit the conversation.")
    while True:
        user_input = input("You: ")
        if user_input.lower() == 'bye':
            print("Chatbot: Goodbye! See you next time!")
            break
        else:
            response = generate_response(user_input, method)
            print(f"Chatbot: {response}")

# Start the chatbot
chatbot('nltk')  # You can also use 'spacy' as the method







